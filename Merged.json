{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IotHubName": {
            "type": "string",
            "metadata": {
                "description": "The name of IoT Hub.  Must be globally unique."
            },
            "defaultValue": "[concat(resourceGroup().name, '-Hub-', uniqueString(resourceGroup().id))]"
        },
        "IotHubSKU": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "F1",
                "S1"
            ],
            "metadata": {
                "description": "IoT Hub SKU."
            }
        },
        "FunctionsName": {
            "type": "string",
            "metadata": {
                "description": "The name of Azure Functions.  Must be globally unique."
            },
            "defaultValue": "[concat(resourceGroup().name, '-Functions-', uniqueString(resourceGroup().id))]"
        },
        "HostingPlanName": {
            "type": "string",
            "metadata": {
                "description": "The name of Hosting Plan.  Must be globally unique."
            },
            "defaultValue": "[concat(resourceGroup().name, '-HostingPlan-', uniqueString(resourceGroup().id))]"
        },
        "StorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of Storage Account.  Must be globally unique."
            },
            "defaultValue": "[toLower(concat(resourceGroup().name, 'stor', uniqueString(resourceGroup().id)))]"
        },
        "RepoURL": {
            "type": "string",
            "defaultValue": "https://github.com/daisukeiot/Solution-Template-Functions.git",
            "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
            }
        },
        "Branch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "The branch of the GitHub repository to use."
            }
        },
        "SignalrName": {
            "type": "string",
            "metadata": {
                "description": "The name of SignalR.  Must be globally unique."
            },
            "defaultValue": "[toLower(concat(resourceGroup().name, '-SignalR-', uniqueString(resourceGroup().id)))]"
        }
    },
    "variables": {
        "consumerGroupName": "[concat(parameters('IotHubName'), '/events/telemetry-cg')]",
        "IotHubSKU": {
            "F1": {
                "SkuName": "F1",
                "partitionCount": 2
            },
            "S1": {
                "SkuName": "S1",
                "partitionCount": 4
            }
        },
        "iotHubName": "[parameters('IotHubName')]",
        "iotHubPolicyName": "iothubowner",
        "functionAppName": "[parameters('FunctionsName')]",
        "hostingPlanName": "[parameters('HostingPlanName')]",
        "storageAccountName": "[parameters('StorageAccountName')]",
        "signalrName": "[parameters('SignalrName')]"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2020-03-01",
            "name": "[variables('iotHubName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "ENV": "P15"
            },
            "sku": {
                "name": "[variables('IotHubSKU')[parameters('IotHubSKU')].SkuName]",
                "tier": "Standard",
                "capacity": 1
            },
            "identity": {
                "type": "None"
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": "[variables('IotHubSKU')[parameters('IotHubSKU')].partitionCount]"
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [
                        {
                            "name": "DeviceLifecycleRoute",
                            "source": "DeviceLifecycleEvents",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        },
                        {
                            "name": "DeviceTwinChangeRoute",
                            "source": "TwinChangeEvents",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        },
                        {
                            "name": "DigitalTwinChangeRoute",
                            "source": "DigitalTwinChangeEvents",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
            "apiVersion": "2018-04-01",
            "name": "[variables('consumerGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('IotHubName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "kind": "Storage",
            "tags": {
                "ENV": "P15"
            },
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('hostingPlanName')]",
            "kind": "app",
            "tags": {
                "ENV": "P15"
            },
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "properties": {
                "workerSize": 0,
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('functionAppName')]",
            "kind": "functionapp",
            "tags": {
                "ENV": "P15"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('IotHubName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value,';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value,';')]"
                        },
                        {
                            "name": "EVENTHUB_CS",
                            "value": "[concat('Endpoint=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey, ';EntityPath=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.path)]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('RepoURL')]",
                        "branch": "[parameters('Branch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        }
    ]
}